import java.util.Scanner;

public class appendLastToFirst {
	private static int countLength(Node<Integer> head) {
		int count = 0;
		while(head!=null) {
			head = head.next;
			count++;
			
		}
		return count;
	}
	
	public static Node<Integer> nodeLasttoFirst(Node<Integer>head,int n) {
		Node<Integer> temp=head;
        int count=0;
        while(temp!=null ){
            temp=temp.next;
            count++;
        }
        int newcount=count-n;
        count=0;
        Node<Integer> temp1=head;
        while(count<newcount-1){
            temp1=temp1.next;
            count++;
        }
        Node<Integer> temp2=temp1.next;
        Node<Integer> temp3=temp1.next;
        while(temp2.next!=null){
            temp2=temp2.next;
        }
        temp2.next=head;
        temp1.next=null;
        return temp3;
	}
	


	public static void printLinkedList(Node<Integer> head ) {
		while(head!=null)
		{
			System.out.print(head.data+" ");
			head = head.next;
		}
	}
	
	public static Node<Integer> takeInput(){
		Scanner s = new Scanner(System.in);
		int data = s.nextInt();
		Node<Integer> head = null,tail = null;
		while(data!=-1) {
			Node<Integer> newNode = new Node<Integer>(data);
			if(head==null) {
				head = newNode;
				tail = newNode;
				
			}
			else {
				tail.next = newNode;
				tail = newNode;
			}
			data = s.nextInt(); 
		}
		return head;
	}
	
	public static void main(String args[]) {
		
		Node<Integer> head = takeInput(); 
		Scanner s = new Scanner(System.in);
		int pos = s.nextInt();
		head = nodeLasttoFirst(head, pos);
		printLinkedList(head);
		
		
	}

}
