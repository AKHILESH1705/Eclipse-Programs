import java.util.Scanner;

public class DeleteEveryNnodes {
	
	public static Node<Integer> skipMdeleteN(Node<Integer> head, int M, int N) {
	
		int c1 = 1;
		int c2 = 1;
		int i = 0;
		Node<Integer> t1 = head,t2=null;
		while(i<=5) {
			while(c1<=M) {
				t1 = t1.next;
				c1++;
			}
			 t2 = t1 ;
			while(c2<=N && t2!=null) {
				t2 = t2.next;
				c2++;
			}
			if(t2.next==null) {
				break;
			}
			t1.next = t2;
			t1 = t2;
		
			c1=1;
			c2=1;
			i++;
		}
		return head;
		
	}
	  	
	public static void PrintLinked(Node<Integer> head) {
		while (head != null) {
			System.out.print(head.data + " ");
			head = head.next;
		}

	}

	public static Node<Integer> takeInput() {
		Scanner s = new Scanner(System.in);
		int data = s.nextInt();
		Node<Integer> head = null, tail = null;
		while (data != -1) {
			Node<Integer> newNode = new Node<Integer>(data);
			if (head == null) {
				head = newNode;
				tail = newNode;
			} else {
				tail.next = newNode;
				tail = tail.next; // tail = currentNode
			}
			data = s.nextInt();
		}
		return head;
	}

	public static void main(String args[]) {
		Scanner s = new Scanner(System.in);
		int t = s.nextInt();
		while(t>0) {
		Node<Integer> head = takeInput();
		int m = s.nextInt();
		int n = s.nextInt();
		head = skipMdeleteN(head,m,n);
		PrintLinked(head);
		
		System.out.println();
		t--;
	 }

	}
}
