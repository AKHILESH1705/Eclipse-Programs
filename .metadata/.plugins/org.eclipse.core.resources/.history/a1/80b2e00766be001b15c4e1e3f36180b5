import java.util.Scanner;

public class PalindromeLinkedList {
	
	public static boolean isPalindrome(Node<Integer> head) {
		Node<Integer> newNode = head;
		boolean b = false;
		if(head==null) 
		{
			return b;
		}
		else {
			isPalindrome(newNode.next);
			while(head!=null && newNode!=null) {
				if(head.data==newNode.data) {
					head = head.next;
					newNode = newNode.next;
					b = true;
				}
				else {
					return false;
				}	
			}
			
	   }
		return b;
	}
	
	public static void PrintLinked(Node<Integer> head) {
		while(head!=null)
		{
			System.out.print(head.data+ " ");
			head = head.next;
		}
		
	}
	public static Node<Integer> takeInput(){
		Scanner s = new Scanner(System.in);
		int data = s.nextInt();
		Node<Integer> head = null,tail = null;
		while(data!=-1) {
			Node<Integer> newNode = new Node<Integer>(data);
			if(head==null) {
				head = newNode;
				tail = newNode;
			}
			else {
				tail.next = newNode;
				tail = tail.next; // tail = currentNode
			}
			data = s.nextInt();
			}
		return head;
	}
	
	
 public static void main(String args[]) {
		Node<Integer> head = takeInput();
		PrintLinked(head);
		System.out.println();
	System.out.println(isPalindrome(head));
 }

}
